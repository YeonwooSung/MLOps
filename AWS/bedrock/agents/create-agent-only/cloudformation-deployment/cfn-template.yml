Parameters:
  S3BucketNameParameter:
    Type: String
    Description: Bucket name where you uploaded artifacts.
  AgentNameParameter:
    Type: String
    Default: cfn-agent-reInvent
    Description: Name of the agent to be created.
Resources:
  agent879Bucket5AB7B964:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Join 
        - '-'
        - - 'artifacts'
          - !Ref S3BucketNameParameter
          - '879'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  agent879BucketPolicyE39F1434:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: agent879Bucket5AB7B964
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - agent879Bucket5AB7B964
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - agent879Bucket5AB7B964
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - agent879Bucket5AB7B964
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - agent879Bucket5AB7B964
                        - Arn
                    - /*
        Version: "2012-10-17"
  agent879BucketAutoDeleteObjectsCustomResourceF1AAFF68:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: agent879Bucket5AB7B964
    DependsOn:
      - agent879BucketPolicyE39F1434
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/custom-resources/custom-s3-autodelete.zip
      Timeout: 900
      MemorySize: 128
      Handler: custom-s3-autodelete/index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs18.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: agent879Bucket5AB7B964
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:asset:path: asset.d28a3fa64d0bd6c7c6f1d6fd707d3e6dc5c81fe8f47891b89459b6492586997f
      aws:asset:property: Code
  openapi879BucketC8E9883F:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Join 
        - '-'
        - - 'openapi'
          - !Ref S3BucketNameParameter
          - '879'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:api-schema:d188f849
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  openapi879BucketPolicy39500888:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: openapi879BucketC8E9883F
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - openapi879BucketC8E9883F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - openapi879BucketC8E9883F
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - openapi879BucketC8E9883F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - openapi879BucketC8E9883F
                        - Arn
                    - /*
        Version: "2012-10-17"
  openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: openapi879BucketC8E9883F
    DependsOn:
      - openapi879BucketPolicy39500888
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  openapi879ApiSchemaBucketAwsCliLayer4FBE3133:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/custom-resources/awscli.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:asset:path: asset.3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  openapi879ApiSchemaBucketCustomResource5F668064:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: S3BucketNameParameter
      SourceObjectKeys:
        - assets/create-agent-schema.zip
      DestinationBucketName:
        Ref: openapi879BucketC8E9883F
      DestinationBucketKeyPrefix: api-schema
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketNameParameter
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketNameParameter
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - openapi879BucketC8E9883F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - openapi879BucketC8E9883F
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/custom-resources/custom-cdk-bucket-deployment.zip
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      Runtime: python3.9
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:asset:path: asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  lambdalayerconstruct879BedrockAgentLayer8AE283A7:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/agents-layer.zip
      CompatibleRuntimes:
        - python3.10
  LambdaIamConstruct879LambdaRoleA7D6203A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLogsFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/IAMFullAccess
      RoleName: bedrock-agent-lambda-role-879
    DependsOn:
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  LambdaIamConstruct879lambdaAllowPolicy18190180:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - lambda:AddPermission
              - lambda:CreateFunction
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LambdaAllowPolicy-879
      Roles:
        - Ref: LambdaIamConstruct879LambdaRoleA7D6203A
    DependsOn:
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  LambdaIamConstruct879iamAllowPolicy18190180:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:PassRole
              - iam:CreateRole
              - iam:AttachRolePolicy
              - iam:GetRole
              - iam:CreatePolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: IamAllowPolicy-879
      Roles:
        - Ref: LambdaIamConstruct879LambdaRoleA7D6203A
    DependsOn:
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  LambdaIamConstruct879s3AllowPolicy19592EA7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutObject
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - agent879Bucket5AB7B964
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - agent879Bucket5AB7B964
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: s3AllowPolicy-879
      Roles:
        - Ref: LambdaIamConstruct879LambdaRoleA7D6203A
    DependsOn:
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: bedrock:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BedrockAllowPolicy-879
      Roles:
        - Ref: LambdaIamConstruct879LambdaRoleA7D6203A
    DependsOn:
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  BedrockIamConstruct879BedrockAgentRole3EECB7F8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
        Version: "2012-10-17"
      RoleName: AmazonBedrockExecutionRoleForAgents_879
    DependsOn:
      - LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0
      - LambdaIamConstruct879lambdaAllowPolicy18190180
      - LambdaIamConstruct879LambdaRoleA7D6203A
      - LambdaIamConstruct879s3AllowPolicy19592EA7
      - LambdaIamConstruct879iamAllowPolicy18190180
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LambdaIamConstruct879LambdaRoleA7D6203A
                - Arn
        Version: "2012-10-17"
      PolicyName: BedrockAgentLambdaPolicy-879
      Roles:
        - Ref: BedrockIamConstruct879BedrockAgentRole3EECB7F8
    DependsOn:
      - LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0
      - LambdaIamConstruct879lambdaAllowPolicy18190180
      - LambdaIamConstruct879LambdaRoleA7D6203A
      - LambdaIamConstruct879s3AllowPolicy19592EA7
      - LambdaIamConstruct879iamAllowPolicy18190180
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - openapi879BucketC8E9883F
                      - Arn
                  - /api-schema/create-agent-schema.json
        Version: "2012-10-17"
      PolicyName: BedrockAgentS3BucketPolicy-879
      Roles:
        - Ref: BedrockIamConstruct879BedrockAgentRole3EECB7F8
    DependsOn:
      - LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0
      - LambdaIamConstruct879lambdaAllowPolicy18190180
      - LambdaIamConstruct879LambdaRoleA7D6203A
      - LambdaIamConstruct879s3AllowPolicy19592EA7
      - LambdaIamConstruct879iamAllowPolicy18190180
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: bedrock:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BedrockAgentBedrockModelPolicy-879
      Roles:
        - Ref: BedrockIamConstruct879BedrockAgentRole3EECB7F8
    DependsOn:
      - LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0
      - LambdaIamConstruct879lambdaAllowPolicy18190180
      - LambdaIamConstruct879LambdaRoleA7D6203A
      - LambdaIamConstruct879s3AllowPolicy19592EA7
      - LambdaIamConstruct879iamAllowPolicy18190180
      - openapi879ApiSchemaBucketAwsCliLayer4FBE3133
      - openapi879ApiSchemaBucketCustomResource5F668064
      - openapi879BucketAutoDeleteObjectsCustomResourceB3DBE6CC
      - openapi879BucketPolicy39500888
      - openapi879BucketC8E9883F
  LambdaConstruct879BedrockAgentLambdaB0D8E1EA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/lambda-function-w-dependencies.zip
      Role:
        Fn::GetAtt:
          - LambdaIamConstruct879LambdaRoleA7D6203A
          - Arn
      Architectures:
        - x86_64
      FunctionName: bedrock-agent-lambda-879
      Handler: lambda-function-w-dependencies/create_agent.lambda_handler
      Layers:
        - Ref: lambdalayerconstruct879BedrockAgentLayer8AE283A7
      Runtime: python3.10
      Timeout: 600
    DependsOn:
      - lambdalayerconstruct879BedrockAgentLayer8AE283A7
      - LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0
      - LambdaIamConstruct879lambdaAllowPolicy18190180
      - LambdaIamConstruct879LambdaRoleA7D6203A
      - LambdaIamConstruct879s3AllowPolicy19592EA7
      - LambdaIamConstruct879iamAllowPolicy18190180
  LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
          - Arn
      Principal: bedrock.amazonaws.com
    DependsOn:
      - lambdalayerconstruct879BedrockAgentLayer8AE283A7
      - LambdaIamConstruct879bedrockAllowPolicy7AE7F5F0
      - LambdaIamConstruct879lambdaAllowPolicy18190180
      - LambdaIamConstruct879LambdaRoleA7D6203A
      - LambdaIamConstruct879s3AllowPolicy19592EA7
      - LambdaIamConstruct879iamAllowPolicy18190180
  custombedrockagentconstruct879bedrockAgentCustomResourceRole47CEEA26:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
  custombedrockagentconstruct879bedrockAgentCustomResourceRoleDefaultPolicy740A77A5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: "*"
            Effect: Allow
            Resource:
              - arn:aws:bedrock:*
              - Fn::GetAtt:
                  - openapi879BucketC8E9883F
                  - Arn
              - Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - :role/AmazonBedrockExecutionRoleForAgents_879
        Version: "2012-10-17"
      PolicyName: custombedrockagentconstruct879bedrockAgentCustomResourceRoleDefaultPolicy740A77A5
      Roles:
        - Ref: custombedrockagentconstruct879bedrockAgentCustomResourceRole47CEEA26
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
  custombedrockagentconstruct879BedrockAgentCustomResourceFunctionBF2EC6B3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/custom-resource.zip
      Role:
        Fn::GetAtt:
          - custombedrockagentconstruct879bedrockAgentCustomResourceRole47CEEA26
          - Arn
      Architectures:
        - x86_64
      Environment:
        Variables:
          RESOURCE_ID: BEDROCK_AGENT_CUSTOM_RESOURCE
          S3_BUCKET:
            Ref: openapi879BucketC8E9883F
          AGENT_NAME:
            Ref: AgentNameParameter
          BEDROCK_AGENT_ROLE_ARN:
            Fn::GetAtt:
              - BedrockIamConstruct879BedrockAgentRole3EECB7F8
              - Arn
          BEDROCK_AGENT_LAMBDA_ARN:
            Fn::GetAtt:
              - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
              - Arn
          S3_BUCKET_KEY: api-schema/create-agent-schema.json
          MODEL_NAME: anthropic.claude-instant-v1
          INSTRUCTION: |
            You are an assistant for solution architects (SA) to create code for Agents for Amazon Bedrock. 
            When creating an agent, consider the following: 1. The user may tell you where to save the artifacts, and they may not tell you that it is an s3 bucket. 
            Assume that the destination they provide is indeed the name of the s3 bucket. If they provide the bucket name, use it instead of prompting them for the bucket name. 
            2. The user may describe an entire list of actions or api's 3. 
            They may refer to the api in various terms like method, function, tool, action 
            4. Feel free to come up with an agent name based on the description when returning results of creation of an agent but always keep it under 20 characters long. 
            Simply provide the returned status text.
      Handler: custom-resource/bedrock_agent_custom_resource.on_event
      Layers:
        - Ref: lambdalayerconstruct879BedrockAgentLayer8AE283A7
      Runtime: python3.10
      Timeout: 600
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - custombedrockagentconstruct879bedrockAgentCustomResourceRoleDefaultPolicy740A77A5
      - custombedrockagentconstruct879bedrockAgentCustomResourceRole47CEEA26
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
  custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleFA163030:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
  custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy3F0463ED:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - custombedrockagentconstruct879BedrockAgentCustomResourceFunctionBF2EC6B3
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - custombedrockagentconstruct879BedrockAgentCustomResourceFunctionBF2EC6B3
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy3F0463ED
      Roles:
        - Ref: custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleFA163030
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
  custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventB4C17316:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/custom-resources/bedrock-agent-custom-resource.zip
      Role:
        Fn::GetAtt:
          - custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleFA163030
          - Arn
      Description: AWS CDK resource provider framework - onEvent (BedrockAgentCdkStack/custom-bedrock-agent-construct-879/BedrockCustomResourceProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - custombedrockagentconstruct879BedrockAgentCustomResourceFunctionBF2EC6B3
              - Arn
      Handler: bedrock-agent-custom-resource/framework.onEvent
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy3F0463ED
      - custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventServiceRoleFA163030
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
    Metadata:
      aws:asset:path: asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf
      aws:asset:is-bundled: false
      aws:asset:property: Code
  custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventLogRetention29546C74:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventB4C17316
      RetentionInDays: 1
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
  custombedrockagentconstruct879BedrockCustomResourceCDCB0A3B:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - custombedrockagentconstruct879BedrockCustomResourceProviderframeworkonEventB4C17316
          - Arn
    DependsOn:
      - BedrockIamConstruct879BedrockAgentBedrockModelPolicy6662011C
      - BedrockIamConstruct879BedrockAgentLambdaPolicy169292FF
      - BedrockIamConstruct879BedrockAgentRole3EECB7F8
      - BedrockIamConstruct879BedrockAgentS3BucketPolicy10C38E21
      - LambdaConstruct879BedrockAgentLambdaInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL687ABBEC73
      - LambdaConstruct879BedrockAgentLambdaB0D8E1EA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:DeleteRetentionPolicy
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: log-retention/index.handler
      Runtime: nodejs16.x
      Code:
        S3Bucket:
          Ref: S3BucketNameParameter
        S3Key: assets/custom-resources/log-retention.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:asset:path: asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8
      aws:asset:is-bundled: false
      aws:asset:property: Code
Outputs:
  S3BucketNameForNewAgentArtifacts:
    Value:
      Ref: agent879Bucket5AB7B964
  LambdaFunctionName:
    Value: bedrock-agent-lambda-879

